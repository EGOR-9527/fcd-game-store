{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\FCDgameStore\\\\client\\\\src\\\\app\\\\AppRouter.tsx\";\nimport { createBrowserRouter, RouterProvider, redirect } from 'react-router-dom';\nimport { pathKeys } from '../shared/lib/react-router.ts';\nimport { PageLogin } from \"../pages/ui/PageLogin.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst routes = [{\n  path: '/login',\n  // Корневой путь\n  loader: () => redirect(pathKeys.login()) // Перенаправление на страницу входа\n}, {\n  children: [{\n    path: pathKeys.login(),\n    element: /*#__PURE__*/_jsxDEV(PageLogin, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 48\n    }, this)\n  }]\n}];\nexport function AppRouter() {\n  const router = createBrowserRouter(routes); // Создаем маршрутизатор\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 12\n  }, this);\n}\n_c = AppRouter;\nvar _c;\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","redirect","pathKeys","PageLogin","jsxDEV","_jsxDEV","routes","path","loader","login","children","element","fileName","_jsxFileName","lineNumber","columnNumber","AppRouter","router","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/FCDgameStore/client/src/app/AppRouter.tsx"],"sourcesContent":["import { createBrowserRouter, RouterProvider, redirect } from 'react-router-dom';\r\nimport { lazy } from 'react';\r\nimport { pathKeys } from '../shared/lib/react-router.ts';\r\nimport { PageLogin } from \"../pages/ui/PageLogin.tsx\";\r\n\r\nconst routes = [\r\n    {\r\n        path: '/login', // Корневой путь\r\n        loader: () => redirect(pathKeys.login()), // Перенаправление на страницу входа\r\n    },\r\n    {\r\n        children: [\r\n            { path: pathKeys.login(), element: <PageLogin /> }\r\n        ]\r\n    }\r\n];\r\n\r\nexport function AppRouter() {\r\n    const router = createBrowserRouter(routes); // Создаем маршрутизатор\r\n    return <RouterProvider router={router} />;\r\n}"],"mappings":";AAAA,SAASA,mBAAmB,EAAEC,cAAc,EAAEC,QAAQ,QAAQ,kBAAkB;AAEhF,SAASC,QAAQ,QAAQ,+BAA+B;AACxD,SAASC,SAAS,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,MAAM,GAAG,CACX;EACIC,IAAI,EAAE,QAAQ;EAAE;EAChBC,MAAM,EAAEA,CAAA,KAAMP,QAAQ,CAACC,QAAQ,CAACO,KAAK,CAAC,CAAC,CAAC,CAAE;AAC9C,CAAC,EACD;EACIC,QAAQ,EAAE,CACN;IAAEH,IAAI,EAAEL,QAAQ,CAACO,KAAK,CAAC,CAAC;IAAEE,OAAO,eAAEN,OAAA,CAACF,SAAS;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC;AAE1D,CAAC,CACJ;AAED,OAAO,SAASC,SAASA,CAAA,EAAG;EACxB,MAAMC,MAAM,GAAGlB,mBAAmB,CAACO,MAAM,CAAC,CAAC,CAAC;EAC5C,oBAAOD,OAAA,CAACL,cAAc;IAACiB,MAAM,EAAEA;EAAO;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC7C;AAACG,EAAA,GAHeF,SAAS;AAAA,IAAAE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}