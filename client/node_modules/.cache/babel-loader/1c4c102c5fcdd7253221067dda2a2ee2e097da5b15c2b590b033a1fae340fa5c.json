{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\FCDgameStore\\\\client\\\\src\\\\widgets\\\\ui\\\\Slider.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { observer } from 'bobx-react';\nimport avatar from \"../../img/avatar.jpg\";\nimport blackMyth from \"../../img/black-myth.jpg\";\nimport gta from \"../../img/gta-6.jpg\";\nimport helldivers from \"../../img/helldivers-2.webp\";\nimport noMans from \"../../img/no-mans.webp\";\nimport style from \"../../style/slider.module.css\";\nimport { sliderStore } from '../../features/SliderStore.tsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IMG = [avatar, blackMyth, gta, helldivers, noMans];\nexport const Slider = _s(observer(_c = _s(() => {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [widths, setWidths] = useState(Array(IMG.length).fill(0)); // Массив для хранения ширины загрузки\n\n  useEffect(() => {\n    const loadingInterval = setInterval(() => {\n      sliderStore.incrementWidth(sliderStore.currentIndex);\n    });\n    const changeImageInterval = setTimeout(() => {\n      sliderStore.nextImage();\n      sliderStore.resetWidths();\n    }, 6000);\n  }, [currentIndex]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.Slider,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.bigImgGame,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: IMG[currentIndex],\n        alt: \"game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.columnSlidersGame,\n      children: IMG.map((slider, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.blockImg,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: `${widths[index]}%`\n            },\n            className: style.loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: slider,\n            alt: \"game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"\\u0418\\u0433\\u0440\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}, \"Y/WFd05GO3KqKBGHfvK7mc/0tWw=\")), \"Y/WFd05GO3KqKBGHfvK7mc/0tWw=\");\n_c2 = Slider;\nvar _c, _c2;\n$RefreshReg$(_c, \"Slider$observer\");\n$RefreshReg$(_c2, \"Slider\");","map":{"version":3,"names":["React","useEffect","observer","avatar","blackMyth","gta","helldivers","noMans","style","sliderStore","jsxDEV","_jsxDEV","IMG","Slider","_s","_c","currentIndex","setCurrentIndex","useState","widths","setWidths","Array","length","fill","loadingInterval","setInterval","incrementWidth","changeImageInterval","setTimeout","nextImage","resetWidths","className","children","bigImgGame","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","columnSlidersGame","map","slider","index","blockImg","width","loading","_c2","$RefreshReg$"],"sources":["C:/Users/user/Desktop/FCDgameStore/client/src/widgets/ui/Slider.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { observer } from 'bobx-react';\r\nimport avatar from \"../../img/avatar.jpg\";\r\nimport blackMyth from \"../../img/black-myth.jpg\";\r\nimport gta from \"../../img/gta-6.jpg\";\r\nimport helldivers from \"../../img/helldivers-2.webp\";\r\nimport noMans from \"../../img/no-mans.webp\";\r\n\r\nimport style from \"../../style/slider.module.css\";\r\n\r\nimport { sliderStore } from '../../features/SliderStore.tsx';\r\n\r\nconst IMG = [avatar, blackMyth, gta, helldivers, noMans];\r\n\r\nexport const Slider: React.FC = observer(() => {\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    const [widths, setWidths] = useState(Array(IMG.length).fill(0)); // Массив для хранения ширины загрузки\r\n\r\n    useEffect(() => {\r\n        const loadingInterval = setInterval(() => {\r\n            sliderStore.incrementWidth(sliderStore.currentIndex);\r\n        })\r\n\r\n        const changeImageInterval = setTimeout(() => {\r\n            sliderStore.nextImage();\r\n            sliderStore.resetWidths();\r\n        }, 6000)\r\n    }, [currentIndex]);\r\n\r\n    return (\r\n        <div className={style.Slider}>\r\n            <div className={style.bigImgGame}>\r\n                <img src={IMG[currentIndex]} alt=\"game\" />\r\n            </div>\r\n\r\n            <div className={style.columnSlidersGame}>\r\n                {IMG.map((slider, index) => {\r\n                    return (\r\n                        <div key={index} className={style.blockImg}>\r\n                            <div style={{ width: `${widths[index]}%` }} className={style.loading}></div>\r\n                            <img src={slider} alt=\"game\" />\r\n                            <h1>Игра</h1>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}